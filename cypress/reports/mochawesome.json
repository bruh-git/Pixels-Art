{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 29,
    "pending": 0,
    "failures": 12,
    "start": "2021-12-18T22:07:49.256Z",
    "end": "2021-12-18T22:08:57.857Z",
    "duration": 68601,
    "testsRegistered": 41,
    "passPercent": 70.73170731707317,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b343dec3-3854-40ec-8a1b-beeae683c1cf",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "48136616-346e-448b-b873-8ea6abad3d2d",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 405,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "4fdf57ba-85f5-4bb7-a165-2e14175e15ef",
              "parentUUID": "48136616-346e-448b-b873-8ea6abad3d2d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4fdf57ba-85f5-4bb7-a165-2e14175e15ef"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 405,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0d78b867-c8c2-432e-a414-347f9a45f623",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 148,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "8515efaa-1061-4102-a087-8356fcb9d83a",
              "parentUUID": "0d78b867-c8c2-432e-a414-347f9a45f623",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 188,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "fe95eff3-58bb-4b47-ab95-b2a9648e0d5f",
              "parentUUID": "0d78b867-c8c2-432e-a414-347f9a45f623",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 163,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "3c6511f5-c6b6-4417-bd80-6f8f73b6aedc",
              "parentUUID": "0d78b867-c8c2-432e-a414-347f9a45f623",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 116,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "4c1aa14a-326c-4d1d-8414-cddb716c9af7",
              "parentUUID": "0d78b867-c8c2-432e-a414-347f9a45f623",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 99,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "1db3ee0a-d2a7-48d2-8636-3508b118e0b1",
              "parentUUID": "0d78b867-c8c2-432e-a414-347f9a45f623",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 134,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "d1a3c71e-212e-4531-a10b-169aa87a5107",
              "parentUUID": "0d78b867-c8c2-432e-a414-347f9a45f623",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 105,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "b0ab4d06-cbd3-4de6-8a0b-3a4fe757ebf0",
              "parentUUID": "0d78b867-c8c2-432e-a414-347f9a45f623",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8515efaa-1061-4102-a087-8356fcb9d83a",
            "fe95eff3-58bb-4b47-ab95-b2a9648e0d5f",
            "3c6511f5-c6b6-4417-bd80-6f8f73b6aedc",
            "4c1aa14a-326c-4d1d-8414-cddb716c9af7",
            "1db3ee0a-d2a7-48d2-8636-3508b118e0b1",
            "d1a3c71e-212e-4531-a10b-169aa87a5107",
            "b0ab4d06-cbd3-4de6-8a0b-3a4fe757ebf0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 953,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4a455dcc-bd45-4110-917e-dc87de2916c0",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 109,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "d817c7f1-886d-4c96-b4c3-8cec2d7438cf",
              "parentUUID": "4a455dcc-bd45-4110-917e-dc87de2916c0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 186,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "47e978f2-c78d-4f7e-b4af-a2e1fc432d87",
              "parentUUID": "4a455dcc-bd45-4110-917e-dc87de2916c0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d817c7f1-886d-4c96-b4c3-8cec2d7438cf",
            "47e978f2-c78d-4f7e-b4af-a2e1fc432d87"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 295,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cb54f73b-ab05-4252-94d6-b400fca05973",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 128,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "7c5cbf6a-ae3a-4245-a02f-cce38e6c34ce",
              "parentUUID": "cb54f73b-ab05-4252-94d6-b400fca05973",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 128,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "fc8ccf7b-4b23-4fb8-948d-fba464d163e1",
              "parentUUID": "cb54f73b-ab05-4252-94d6-b400fca05973",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 185,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "570e64bb-5dab-44c1-bb32-6d9aea8d1511",
              "parentUUID": "cb54f73b-ab05-4252-94d6-b400fca05973",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 105,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "a52db391-50fa-465d-942e-97e2c47d0883",
              "parentUUID": "cb54f73b-ab05-4252-94d6-b400fca05973",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7c5cbf6a-ae3a-4245-a02f-cce38e6c34ce",
            "fc8ccf7b-4b23-4fb8-948d-fba464d163e1",
            "570e64bb-5dab-44c1-bb32-6d9aea8d1511",
            "a52db391-50fa-465d-942e-97e2c47d0883"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 546,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4affe479-adb4-4b09-b100-423a40acdfb5",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 391,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "b9db5fc4-863b-4212-b337-a5d49f27d68d",
              "parentUUID": "4affe479-adb4-4b09-b100-423a40acdfb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 253,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "e09ed457-af3a-4fa9-9215-12191bc8e2cf",
              "parentUUID": "4affe479-adb4-4b09-b100-423a40acdfb5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b9db5fc4-863b-4212-b337-a5d49f27d68d",
            "e09ed457-af3a-4fa9-9215-12191bc8e2cf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 644,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9b284104-96c6-47fc-b7e1-5966763832ba",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 117,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "1aae3b02-2647-4c80-a70e-bd2f6b2a8628",
              "parentUUID": "9b284104-96c6-47fc-b7e1-5966763832ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 128,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "c8c08ed4-a254-4bf8-8ec0-50505f71cbc6",
              "parentUUID": "9b284104-96c6-47fc-b7e1-5966763832ba",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1aae3b02-2647-4c80-a70e-bd2f6b2a8628",
            "c8c08ed4-a254-4bf8-8ec0-50505f71cbc6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 245,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e6ca0fbc-88c2-4632-9eff-260bf7394dc3",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 465,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "e13b11bb-18dc-4b81-af45-90320d17c89a",
              "parentUUID": "e6ca0fbc-88c2-4632-9eff-260bf7394dc3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8631,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "08ac59ff-3967-41e7-81ba-2c8f4d018b4e",
              "parentUUID": "e6ca0fbc-88c2-4632-9eff-260bf7394dc3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e13b11bb-18dc-4b81-af45-90320d17c89a",
            "08ac59ff-3967-41e7-81ba-2c8f4d018b4e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9096,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "eaa8aa4e-b76f-4cf9-af89-9d6b71add37f",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2238,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "9ba4200e-81d4-4940-ad2a-4ede2c0d3fd2",
              "parentUUID": "eaa8aa4e-b76f-4cf9-af89-9d6b71add37f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8646,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "14745a38-4426-4827-9134-193ecafc8999",
              "parentUUID": "eaa8aa4e-b76f-4cf9-af89-9d6b71add37f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1548,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "620282d5-c4df-4831-a6f6-2d409bc1e5f9",
              "parentUUID": "eaa8aa4e-b76f-4cf9-af89-9d6b71add37f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9ba4200e-81d4-4940-ad2a-4ede2c0d3fd2",
            "14745a38-4426-4827-9134-193ecafc8999",
            "620282d5-c4df-4831-a6f6-2d409bc1e5f9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12432,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "75de8646-068f-4b0f-81ae-8340393dbacc",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 157,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "9790a78b-6da1-4da4-81ee-bf3308da13dd",
              "parentUUID": "75de8646-068f-4b0f-81ae-8340393dbacc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 105,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "5138b55c-85f5-42c8-9755-f4577ebbcf4a",
              "parentUUID": "75de8646-068f-4b0f-81ae-8340393dbacc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 87,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "dc51c6c5-28bb-4c66-b758-7741084f1c54",
              "parentUUID": "75de8646-068f-4b0f-81ae-8340393dbacc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2357,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "25638d85-08f8-4e5d-acef-48628e66504b",
              "parentUUID": "75de8646-068f-4b0f-81ae-8340393dbacc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9790a78b-6da1-4da4-81ee-bf3308da13dd",
            "5138b55c-85f5-42c8-9755-f4577ebbcf4a",
            "dc51c6c5-28bb-4c66-b758-7741084f1c54",
            "25638d85-08f8-4e5d-acef-48628e66504b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2706,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2d304ffc-4bb1-43d0-8eed-44f1d4830841",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4339,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40991/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40991/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40991/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40991/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40991/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40991/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40991/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40991/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40991/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40991/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40991/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40991/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40991/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "0655ba89-bf8f-4cdf-9398-4907c07e2b5e",
              "parentUUID": "2d304ffc-4bb1-43d0-8eed-44f1d4830841",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 167,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {},
              "uuid": "05a1932b-7f68-4894-8008-f9df36690e3d",
              "parentUUID": "2d304ffc-4bb1-43d0-8eed-44f1d4830841",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4251,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:40991/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40991/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40991/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40991/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40991/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40991/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40991/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40991/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40991/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40991/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40991/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40991/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40991/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b5789779-7e85-4465-9c11-6e314bb8326e",
              "parentUUID": "2d304ffc-4bb1-43d0-8eed-44f1d4830841",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 156,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {},
              "uuid": "fd6a4582-3270-423d-8a83-ef5fb89f4147",
              "parentUUID": "2d304ffc-4bb1-43d0-8eed-44f1d4830841",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4245,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40991/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40991/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40991/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40991/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40991/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40991/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40991/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40991/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40991/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40991/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40991/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40991/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40991/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "541e64a1-2eb4-471f-b99f-8086e8c93fb5",
              "parentUUID": "2d304ffc-4bb1-43d0-8eed-44f1d4830841",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4319,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40991/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40991/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40991/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40991/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40991/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40991/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40991/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40991/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40991/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40991/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40991/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40991/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40991/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "5726eccb-06a2-4a08-b663-73113e74347a",
              "parentUUID": "2d304ffc-4bb1-43d0-8eed-44f1d4830841",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 476,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "AssertionError: expected false to match /Board inválido!/i",
                "estack": "AssertionError: expected false to match /Board inválido!/i\n    at getRet (http://localhost:40991/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:40991/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:40991/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:40991/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:40991/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:40991/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:40991/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:40991/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40991/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40991/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:40991/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40991/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40991/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40991/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1a01add1-a1f5-4564-8d29-790971834842",
              "parentUUID": "2d304ffc-4bb1-43d0-8eed-44f1d4830841",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4250,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40991/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40991/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40991/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40991/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40991/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40991/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40991/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40991/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40991/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40991/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40991/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40991/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40991/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "65419a4c-307a-4b74-8385-a1cfbd7e6e05",
              "parentUUID": "2d304ffc-4bb1-43d0-8eed-44f1d4830841",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4337,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40991/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40991/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40991/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40991/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40991/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40991/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40991/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40991/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40991/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40991/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40991/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40991/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40991/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "05eba3f5-3c21-4d9d-a2a8-c095d47aad2b",
              "parentUUID": "2d304ffc-4bb1-43d0-8eed-44f1d4830841",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "05a1932b-7f68-4894-8008-f9df36690e3d",
            "fd6a4582-3270-423d-8a83-ef5fb89f4147"
          ],
          "failures": [
            "0655ba89-bf8f-4cdf-9398-4907c07e2b5e",
            "b5789779-7e85-4465-9c11-6e314bb8326e",
            "541e64a1-2eb4-471f-b99f-8086e8c93fb5",
            "5726eccb-06a2-4a08-b663-73113e74347a",
            "1a01add1-a1f5-4564-8d29-790971834842",
            "65419a4c-307a-4b74-8385-a1cfbd7e6e05",
            "05eba3f5-3c21-4d9d-a2a8-c095d47aad2b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 26540,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f44ad068-bfcb-4f62-8c45-af3429ba35ad",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4327,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40991/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40991/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40991/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40991/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40991/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40991/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40991/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40991/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40991/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40991/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40991/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40991/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40991/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f4a92ae0-d269-46bb-a020-3349292e487c",
              "parentUUID": "f44ad068-bfcb-4f62-8c45-af3429ba35ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4346,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40991/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40991/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40991/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40991/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40991/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40991/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40991/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40991/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40991/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40991/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40991/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40991/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40991/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "01ca0d15-6442-47cc-a652-152d170bdabd",
              "parentUUID": "f44ad068-bfcb-4f62-8c45-af3429ba35ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4321,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40991/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40991/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40991/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40991/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40991/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40991/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40991/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40991/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40991/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40991/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40991/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40991/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40991/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "0f48b74a-1d78-468c-b2fd-9a43e258dc08",
              "parentUUID": "f44ad068-bfcb-4f62-8c45-af3429ba35ad",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "f4a92ae0-d269-46bb-a020-3349292e487c",
            "01ca0d15-6442-47cc-a652-152d170bdabd",
            "0f48b74a-1d78-468c-b2fd-9a43e258dc08"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12994,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d9db1399-dccf-4361-ac87-c92fa814c119",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 458,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:40991/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:40991/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:40991/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:40991/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:40991/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:40991/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:40991/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:40991/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40991/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40991/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:40991/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40991/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40991/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40991/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "87463ce2-be4a-4ec9-9fa1-502c0cbef972",
              "parentUUID": "d9db1399-dccf-4361-ac87-c92fa814c119",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 370,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:40991/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:40991/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:40991/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:40991/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:40991/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:40991/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:40991/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:40991/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40991/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40991/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:40991/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40991/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40991/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40991/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "c6b856f4-3ede-4b55-aa68-e53fc95148f0",
              "parentUUID": "d9db1399-dccf-4361-ac87-c92fa814c119",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "87463ce2-be4a-4ec9-9fa1-502c0cbef972",
            "c6b856f4-3ede-4b55-aa68-e53fc95148f0"
          ],
          "pending": [],
          "skipped": [],
          "duration": 828,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}