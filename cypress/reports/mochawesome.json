{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 29,
    "pending": 0,
    "failures": 12,
    "start": "2021-12-18T22:09:59.264Z",
    "end": "2021-12-18T22:11:08.068Z",
    "duration": 68804,
    "testsRegistered": 41,
    "passPercent": 70.73170731707317,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "506b9971-26da-46a3-a8f2-4c12f2aeadc8",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ccd87e83-c500-4952-acf3-7d0e78b9051d",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 273,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "18c01173-dccb-4a40-b0b2-ef6bb66629f2",
              "parentUUID": "ccd87e83-c500-4952-acf3-7d0e78b9051d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "18c01173-dccb-4a40-b0b2-ef6bb66629f2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 273,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "eb892e39-2d5f-4d01-b1d9-0d38ae9c3a4a",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 157,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "e033e538-92aa-4def-9316-8275a6b3990f",
              "parentUUID": "eb892e39-2d5f-4d01-b1d9-0d38ae9c3a4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 220,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "a7a1bc26-50ff-4ddf-8664-3fe84ac901c7",
              "parentUUID": "eb892e39-2d5f-4d01-b1d9-0d38ae9c3a4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 156,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "e3bcf238-255f-49c3-8cac-cca990088747",
              "parentUUID": "eb892e39-2d5f-4d01-b1d9-0d38ae9c3a4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 165,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "5ded1c4f-1962-4cc3-8c1c-23362bb0c74d",
              "parentUUID": "eb892e39-2d5f-4d01-b1d9-0d38ae9c3a4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 115,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "876f7fbb-05f4-45ba-9b22-0ebe997593a9",
              "parentUUID": "eb892e39-2d5f-4d01-b1d9-0d38ae9c3a4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 156,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "61d5b750-2ad4-4b48-81f2-493b6c83fd2d",
              "parentUUID": "eb892e39-2d5f-4d01-b1d9-0d38ae9c3a4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 107,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "895d650f-137c-4ec3-b036-5742fba74f55",
              "parentUUID": "eb892e39-2d5f-4d01-b1d9-0d38ae9c3a4a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e033e538-92aa-4def-9316-8275a6b3990f",
            "a7a1bc26-50ff-4ddf-8664-3fe84ac901c7",
            "e3bcf238-255f-49c3-8cac-cca990088747",
            "5ded1c4f-1962-4cc3-8c1c-23362bb0c74d",
            "876f7fbb-05f4-45ba-9b22-0ebe997593a9",
            "61d5b750-2ad4-4b48-81f2-493b6c83fd2d",
            "895d650f-137c-4ec3-b036-5742fba74f55"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1076,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "13c1beee-dcc3-4c9b-95f5-e3b158a37ce9",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 131,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "aac26b35-d04e-43db-b028-f3f36df8c15b",
              "parentUUID": "13c1beee-dcc3-4c9b-95f5-e3b158a37ce9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 206,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "c2d36a2b-85c1-43ce-9914-017bc88f52ce",
              "parentUUID": "13c1beee-dcc3-4c9b-95f5-e3b158a37ce9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "aac26b35-d04e-43db-b028-f3f36df8c15b",
            "c2d36a2b-85c1-43ce-9914-017bc88f52ce"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 337,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3475b838-9abd-476a-bf2f-c858a65e5cca",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 151,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "2bb785fe-d3e0-45d9-a401-9f5f0e761cbe",
              "parentUUID": "3475b838-9abd-476a-bf2f-c858a65e5cca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 138,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "d0257f9d-4715-4360-9af0-0c0c93f1b3f6",
              "parentUUID": "3475b838-9abd-476a-bf2f-c858a65e5cca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 185,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "01f65bd0-91b4-42bf-9952-2d05103a41ba",
              "parentUUID": "3475b838-9abd-476a-bf2f-c858a65e5cca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 94,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "942c372f-6ef1-419b-a80a-da3ec37654d5",
              "parentUUID": "3475b838-9abd-476a-bf2f-c858a65e5cca",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2bb785fe-d3e0-45d9-a401-9f5f0e761cbe",
            "d0257f9d-4715-4360-9af0-0c0c93f1b3f6",
            "01f65bd0-91b4-42bf-9952-2d05103a41ba",
            "942c372f-6ef1-419b-a80a-da3ec37654d5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 568,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "248a880d-5cb8-4da8-96e7-a4311b37d62e",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 312,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "102050af-1ec7-49b7-a23f-ce475ef753a8",
              "parentUUID": "248a880d-5cb8-4da8-96e7-a4311b37d62e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 284,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "370595e9-f2d6-43b1-8e10-723595b82567",
              "parentUUID": "248a880d-5cb8-4da8-96e7-a4311b37d62e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "102050af-1ec7-49b7-a23f-ce475ef753a8",
            "370595e9-f2d6-43b1-8e10-723595b82567"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 596,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1eab1f33-a31b-4d63-8095-9d98bd24d313",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 144,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "86393d6f-bfb4-499f-9333-c9badd7bad99",
              "parentUUID": "1eab1f33-a31b-4d63-8095-9d98bd24d313",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 93,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "fa61e631-d16d-4181-83af-00bf538e1a72",
              "parentUUID": "1eab1f33-a31b-4d63-8095-9d98bd24d313",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "86393d6f-bfb4-499f-9333-c9badd7bad99",
            "fa61e631-d16d-4181-83af-00bf538e1a72"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 237,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "73f8bf0e-ba2f-48a4-97cf-457962c36271",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 467,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "a0e84d51-71aa-434c-b196-0adb85762866",
              "parentUUID": "73f8bf0e-ba2f-48a4-97cf-457962c36271",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8689,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "2a736d84-5b4d-4ca3-b392-9f5571074325",
              "parentUUID": "73f8bf0e-ba2f-48a4-97cf-457962c36271",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a0e84d51-71aa-434c-b196-0adb85762866",
            "2a736d84-5b4d-4ca3-b392-9f5571074325"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9156,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "35e54805-d5f3-4a82-bf9f-286dbd4933b4",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2215,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "e9c717bf-5b9c-4d90-ac86-d4d3c0d6ff5f",
              "parentUUID": "35e54805-d5f3-4a82-bf9f-286dbd4933b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8712,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "aa5c65f6-688f-48ae-8d92-d9ef30c6af18",
              "parentUUID": "35e54805-d5f3-4a82-bf9f-286dbd4933b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1490,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "68f47de9-6795-4fbb-8075-5d3af0bcd30c",
              "parentUUID": "35e54805-d5f3-4a82-bf9f-286dbd4933b4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e9c717bf-5b9c-4d90-ac86-d4d3c0d6ff5f",
            "aa5c65f6-688f-48ae-8d92-d9ef30c6af18",
            "68f47de9-6795-4fbb-8075-5d3af0bcd30c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12417,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5a6a0fc6-ad73-4150-9592-2da6cb624a5e",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 140,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "06fbc545-8162-4cee-ba20-50746dee39b0",
              "parentUUID": "5a6a0fc6-ad73-4150-9592-2da6cb624a5e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 129,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "e895cf76-6bf2-4f46-8b83-60e8242650b5",
              "parentUUID": "5a6a0fc6-ad73-4150-9592-2da6cb624a5e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 100,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "d6e013bf-67d6-4c6d-b05b-b4160e9afbc6",
              "parentUUID": "5a6a0fc6-ad73-4150-9592-2da6cb624a5e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2424,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "f898caa2-0c06-4d9e-b4af-0d9e2edbbd31",
              "parentUUID": "5a6a0fc6-ad73-4150-9592-2da6cb624a5e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "06fbc545-8162-4cee-ba20-50746dee39b0",
            "e895cf76-6bf2-4f46-8b83-60e8242650b5",
            "d6e013bf-67d6-4c6d-b05b-b4160e9afbc6",
            "f898caa2-0c06-4d9e-b4af-0d9e2edbbd31"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2793,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8d6a615e-4084-4789-814c-6b0ab51e13de",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4383,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34727/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34727/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34727/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34727/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34727/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34727/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34727/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34727/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34727/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34727/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34727/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34727/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34727/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "29898c00-7eaf-4d37-a70e-f8e49a625371",
              "parentUUID": "8d6a615e-4084-4789-814c-6b0ab51e13de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 198,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {},
              "uuid": "635cd86d-b7bb-442d-b310-209232c36c94",
              "parentUUID": "8d6a615e-4084-4789-814c-6b0ab51e13de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4278,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:34727/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34727/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34727/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34727/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34727/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34727/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34727/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34727/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34727/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34727/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34727/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34727/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34727/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "edf405fa-d397-4ce1-aa22-cff9e99edfff",
              "parentUUID": "8d6a615e-4084-4789-814c-6b0ab51e13de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 145,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {},
              "uuid": "d879fa26-11d3-45af-9515-32f843cb7eda",
              "parentUUID": "8d6a615e-4084-4789-814c-6b0ab51e13de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4270,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34727/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34727/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34727/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34727/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34727/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34727/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34727/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34727/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34727/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34727/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34727/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34727/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34727/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a90e0045-90b7-4a4c-ace6-9916843a2100",
              "parentUUID": "8d6a615e-4084-4789-814c-6b0ab51e13de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4389,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34727/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34727/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34727/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34727/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34727/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34727/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34727/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34727/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34727/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34727/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34727/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34727/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34727/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f9a61581-7308-4934-8838-ff57f3a28196",
              "parentUUID": "8d6a615e-4084-4789-814c-6b0ab51e13de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 397,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "AssertionError: expected false to match /Board inválido!/i",
                "estack": "AssertionError: expected false to match /Board inválido!/i\n    at getRet (http://localhost:34727/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:34727/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:34727/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:34727/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:34727/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:34727/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:34727/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:34727/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34727/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34727/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:34727/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34727/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34727/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34727/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "547df448-fe7f-447b-b130-50ec48628d34",
              "parentUUID": "8d6a615e-4084-4789-814c-6b0ab51e13de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4278,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34727/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34727/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34727/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34727/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34727/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34727/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34727/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34727/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34727/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34727/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34727/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34727/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34727/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "43904475-16b1-479d-a76e-76ebf4e022b2",
              "parentUUID": "8d6a615e-4084-4789-814c-6b0ab51e13de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4322,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34727/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34727/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34727/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34727/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34727/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34727/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34727/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34727/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34727/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34727/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34727/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34727/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34727/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ba1451d6-af70-48c5-84f8-651e9686cd76",
              "parentUUID": "8d6a615e-4084-4789-814c-6b0ab51e13de",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "635cd86d-b7bb-442d-b310-209232c36c94",
            "d879fa26-11d3-45af-9515-32f843cb7eda"
          ],
          "failures": [
            "29898c00-7eaf-4d37-a70e-f8e49a625371",
            "edf405fa-d397-4ce1-aa22-cff9e99edfff",
            "a90e0045-90b7-4a4c-ace6-9916843a2100",
            "f9a61581-7308-4934-8838-ff57f3a28196",
            "547df448-fe7f-447b-b130-50ec48628d34",
            "43904475-16b1-479d-a76e-76ebf4e022b2",
            "ba1451d6-af70-48c5-84f8-651e9686cd76"
          ],
          "pending": [],
          "skipped": [],
          "duration": 26660,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "14bbd7c2-4f0a-4e15-86b6-a2fe9228fd94",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4318,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34727/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34727/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34727/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34727/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34727/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34727/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34727/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34727/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34727/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34727/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34727/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34727/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34727/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "259da181-a8da-4115-81c0-b6c510275cdd",
              "parentUUID": "14bbd7c2-4f0a-4e15-86b6-a2fe9228fd94",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4304,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34727/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34727/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34727/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34727/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34727/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34727/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34727/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34727/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34727/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34727/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34727/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34727/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34727/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "da2bc599-5021-4976-85e2-2e49675bb370",
              "parentUUID": "14bbd7c2-4f0a-4e15-86b6-a2fe9228fd94",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4298,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34727/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34727/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34727/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34727/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34727/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34727/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34727/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34727/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34727/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34727/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34727/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34727/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34727/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9d58a0c9-4450-4da4-b511-f83bf2ee092f",
              "parentUUID": "14bbd7c2-4f0a-4e15-86b6-a2fe9228fd94",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "259da181-a8da-4115-81c0-b6c510275cdd",
            "da2bc599-5021-4976-85e2-2e49675bb370",
            "9d58a0c9-4450-4da4-b511-f83bf2ee092f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12920,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "107b46d7-5f5b-4fe7-835a-a1bb459d2b31",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 455,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:34727/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:34727/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:34727/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:34727/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:34727/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:34727/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:34727/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:34727/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34727/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34727/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:34727/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34727/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34727/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34727/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "66075ff9-866a-45a4-b0b0-679505c74de9",
              "parentUUID": "107b46d7-5f5b-4fe7-835a-a1bb459d2b31",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 382,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:34727/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:34727/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:34727/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:34727/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:34727/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:34727/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:34727/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:34727/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34727/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34727/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:34727/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34727/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34727/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34727/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "ecfce3fb-942e-4396-a0b7-f040a2816c92",
              "parentUUID": "107b46d7-5f5b-4fe7-835a-a1bb459d2b31",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "66075ff9-866a-45a4-b0b0-679505c74de9",
            "ecfce3fb-942e-4396-a0b7-f040a2816c92"
          ],
          "pending": [],
          "skipped": [],
          "duration": 837,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}